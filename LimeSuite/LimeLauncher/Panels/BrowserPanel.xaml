<!--**************************************************************************
* Author:       Sebastien Mouy, alias Starwer
* Contact:      starwer@laposte.net
* Website:      http://starwer.online.fr
* Creation:     18-03-2018
* Copyright :   Sebastien Mouy © 2018  
**************************************************************************-->


<UserControl x:Class="LimeLauncher.BrowserPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:l="clr-namespace:LimeLauncher"
             xmlns:c="clr-namespace:LimeLauncher.Controls"
             xmlns:th="clr-namespace:Thumbnail"
             xmlns:w="clr-namespace:WPFhelper"
             mc:Ignorable="d" 
             d:DesignWidth="400"
             d:DesignHeight="400">
    <UserControl.Resources>

        <!--*************************************************************************************-->
        <!-- Define value-converters -->
        
        <w:EqualConverter x:Key="EqualConvert" />
        <w:UniversalValueConverter x:Key="AutoConvert" />
        <w:ScaleConverter x:Key="ScaleConvert" />
        <l:TranslateConverter x:Key="Translate" />
        <BooleanToVisibilityConverter x:Key="BoolToVisible" />

        
        <!--*************************************************************************************-->
        <!-- LimeItem Icon :  Button representing a LimetItem child (thumbnail/Icon) -->

        <DataTemplate x:Key="ItemDataTemplate">
            <ToggleButton x:Name="wxItem" 
                          Style="{DynamicResource LimeItemButtonStyle}" 
                          w:ClipDragDrop.Source="{Binding}"
                          w:ClipDragDrop.Destination="{Binding}"
                          ToolTip="{Binding Tooltip}" 
                          MouseEnter="Button_MouseEnter" 
                          MouseLeave="Button_MouseLeave" >
                <Grid x:Name="wxButtonGrid" 
                      Height="Auto">
                    <Grid.RowDefinitions>
                        <RowDefinition x:Name="wxUpRow"  
                                       Height="{Binding ElementName=wxButtonGrid, Path=Width}"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition x:Name="wxTextCol" 
                                          Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Default view: Big Icon (non task) view -->

                    <Image x:Name="wxIcon" 
                           Grid.Column="0" Grid.ColumnSpan="2" 
                           VerticalAlignment="Center"
                           UseLayoutRounding="True" SnapsToDevicePixels="True" 
                           Source="{Binding ImgSrc, Mode=OneWay}"/>

                    <th:Thumbnail x:Name="wxThumbnail" 
                                  Grid.Column="0" Grid.ColumnSpan="2" 
                                  Visibility="Hidden" 
                                  Source="{Binding Handle}"/>

                    <w:WaitRotatingDots x:Name="wxWait"
                                        Grid.Column="{Binding ElementName=wxIcon, Path=(Grid.Column)}" 
                                        Grid.ColumnSpan="{Binding ElementName=wxIcon, Path=(Grid.ColumnSpan)}"  
                                        Grid.Row="{Binding ElementName=wxIcon, Path=(Grid.Row)}" 
                                        Grid.RowSpan="{Binding ElementName=wxIcon, Path=(Grid.RowSpan)}"
                                        Width="{Binding ElementName=wxIcon, Path=Width}"
                                        Height="{Binding ElementName=wxIcon, Path=Height}"
                                        Panel.ZIndex="1"
                                        IsEnabled="{Binding IsSaving}" />

                    <TextBlock x:Name="wxText" 
                               Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" 
                               VerticalAlignment="Center" HorizontalAlignment="Center"
                               Text="{Binding Name}" />

                </Grid>
            </ToggleButton>

            <DataTemplate.Triggers>

                <!-- Handle Icon visibility -->
                <DataTrigger Binding="{Binding ImgSrc}" Value="{x:Null}">
                    <Setter TargetName="wxIcon" Property="Visibility" Value="Hidden"/>
                </DataTrigger>

                <DataTrigger Binding="{Binding IsSaving}" Value="True">
                    <Setter TargetName="wxIcon" Property="Visibility" Value="Hidden"/>
                </DataTrigger>


                <!-- Handle Task thumbnail visibility -->
                <DataTrigger Binding="{Binding IsTaskThumbVisible}" Value="True">
                    <Setter TargetName="wxIcon" Property="Width" Value="{Binding Skin.IconSmallSize.Content.Scaled, Source={x:Static l:Global.Local}}"/>
                    <Setter TargetName="wxIcon" Property="Height" Value="{Binding Skin.IconSmallSize.Content.Scaled, Source={x:Static l:Global.Local}}"/>
                    <Setter TargetName="wxThumbnail" Property="Visibility" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetName="wxThumbnail" Storyboard.TargetProperty="Scale" From="0" To="1" Duration="0:0:0.3"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>


                <!-- Handle Task thumbnail layout (no wrap) -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsTaskThumbVisible}" Value="True"/>
                        <Condition Binding="{Binding Skin.IconWrapTrigger, Source={x:Static l:Global.Local}}" Value="False"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="wxText" Property="HorizontalAlignment" Value="Left"/>
                    <Setter TargetName="wxText" Property="Grid.Column" Value="1"/>
                    <Setter TargetName="wxText" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="wxIcon" Property="Grid.Row" Value="1"/>
                    <Setter TargetName="wxIcon" Property="Grid.ColumnSpan" Value="1"/>
                </MultiDataTrigger>

                <!-- Handle Task thumbnail layout (wrap) -->
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsTaskThumbVisible}" Value="True"/>
                        <Condition Binding="{Binding Skin.IconWrapTrigger, Source={x:Static l:Global.Local}}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="wxText" Property="TextAlignment" Value="Center"/>
                    <Setter TargetName="wxText" Property="HorizontalAlignment" Value="Center"/>
                    <Setter TargetName="wxText" Property="Grid.Column" Value="0"/>
                    <Setter TargetName="wxText" Property="Grid.ColumnSpan" Value="2"/>
                    <Setter TargetName="wxIcon" Property="VerticalAlignment" Value="Bottom"/>
                    <Setter TargetName="wxIcon" Property="Grid.Row" Value="0"/>
                    <Setter TargetName="wxIcon" Property="Grid.ColumnSpan" Value="1"/>
                </MultiDataTrigger>

                <!-- List view (overrides many of the previous setters) -->
                <DataTrigger Binding="{Binding ListView, Source={x:Static l:Global.Local}}" Value="True">
                    <Setter TargetName="wxUpRow" Property="Height" Value="0" />
                    <Setter TargetName="wxText" Property="HorizontalAlignment" Value="Left"/>
                    <Setter TargetName="wxText" Property="Grid.Column" Value="1"/>
                    <Setter TargetName="wxText" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="wxIcon" Property="Grid.Row" Value="1"/>
                    <Setter TargetName="wxIcon" Property="Grid.ColumnSpan" Value="1"/>
                    <Setter TargetName="wxIcon" Property="Width" Value="{Binding Skin.IconSmallSize.Content.Scaled, Source={x:Static l:Global.Local}}"/>
                    <Setter TargetName="wxIcon" Property="Height" Value="{Binding Skin.IconSmallSize.Content.Scaled, Source={x:Static l:Global.Local}}"/>
                    <Setter TargetName="wxThumbnail" Property="Visibility" Value="Hidden"/>
                </DataTrigger>

            </DataTemplate.Triggers>
        </DataTemplate>


        <!--*************************************************************************************-->
        <!-- LimeItem Panel : Panel representing one LimeItem and its children -->

        <DataTemplate x:Key="LimeItemPanel">
            <StackPanel x:Name="wxPanel" 
                        Style="{DynamicResource IconPanelStyle}" 
                        Visibility="{Binding IsPanelVisible, Mode=OneWay, Converter={StaticResource BoolToVisible}}"
                        Loaded="wxPanel_Loaded" 
                        PreviewKeyDown="wxPanel_PreviewKeyDown" >

                <Grid x:Name="wxHeader"
                      w:ClipDragDrop.Disable="All"
                      w:ClipDragDrop.Destination="{Binding}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image x:Name="wxHeaderIcon" Grid.Column="0" 
                           Source="{Binding ImgSrc, Mode=OneWay}" 
                           SnapsToDevicePixels="True" 
                           UseLayoutRounding="True"/>
                    <TextBlock x:Name="wxHeaderTitle" Grid.Column="1"  
                                   Text="{Binding Name}"/>
                </Grid>

                <ItemsControl x:Name="wxLimeItems" 
                          Focusable="False" 
                          ItemsSource="{Binding Children}" 
                          ItemTemplate="{DynamicResource ItemDataTemplate}"
                          w:DataVirtualization.Target="{Binding}"
                          w:ClipDragDrop.DragDefaultOperation="Move"
                          w:ClipDragDrop.Disable="Clipboard"
                          w:ClipDragDrop.Destination="{Binding}"
                          Grid.IsSharedSizeScope="true">
                </ItemsControl>

            </StackPanel>

            <DataTemplate.Triggers>
                <!-- Allow Clipboard and Drag & Drop if not the Task-Switcher panel -->
                <DataTrigger Binding="{Binding Task}" Value="False">
                    <Setter TargetName="wxHeader" Property="w:ClipDragDrop.Disable" Value="None" />
                    <Setter TargetName="wxHeader" Property="w:ClipDragDrop.Source" Value="{Binding}" />
                    <Setter TargetName="wxLimeItems" Property="w:ClipDragDrop.Disable" Value="None" />
                </DataTrigger>
            </DataTemplate.Triggers>
            
        </DataTemplate>

        <!--*************************************************************************************-->

        <!-- No Style shall be used, so that this control is kept skinable -->

    </UserControl.Resources>

    <!--*************************************************************************************-->
    <!-- Debug: This style only applies at design-time -->

    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Style.Resources>
            </Style.Resources>
        </Style>
    </d:DesignerProperties.DesignStyle>

    <!--*************************************************************************************-->


    <Border w:ClipDragDrop.Destination="{Binding}"
            ContextMenuOpening="LimeItem_ContextMenuOpening" >
        <Grid x:Name="wxToolGrid"  
              Style="{DynamicResource BrowserToolGridStyle}">
            <!-- In code behind wxScroll_LayoutUpdated: column and rows are adjusted -->
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" x:Name="wxRowScrollTop" />
                <RowDefinition Height="Auto"  x:Name="wxRowScrollMiddle" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition x:Name="wxColumnScroll" />
            </Grid.ColumnDefinitions>

            <ScrollViewer x:Name="wxScroll" Grid.Column="0" Grid.Row="0"
                          Grid.ColumnSpan="4" Grid.RowSpan="3"
                          Style="{DynamicResource IconScrollViewerStyle}" 
                          Focusable="False" 
                          IsTabStop="False"
                          ScrollChanged="UpdatePanels" 
                          LayoutUpdated="wxScroll_LayoutUpdated">
                <ScrollViewer.CacheMode>
                    <BitmapCache EnableClearType="False"
                                 SnapsToDevicePixels="False" />
                </ScrollViewer.CacheMode>

                <ItemsControl x:Name="wxRoot" 
                          ItemTemplate="{StaticResource LimeItemPanel}" 
                          ItemsSource="{Binding}" 
                          Focusable="False"
                          KeyDown="wxRoot_KeyDown" 
                          Button.Click="LimeItem_Click" 
                          Button.GotFocus="Button_GotFocus" 
                          Button.LostFocus="Button_LostFocus">
                </ItemsControl>
                
            </ScrollViewer>

            <Button x:Name="wxBack" Grid.Column="0" Grid.Row="1"
                    Panel.ZIndex="1"
                    Style="{DynamicResource NavigationBackButtonStyle}" 
                    DataContext="{Binding [Backward], Source={x:Static l:Global.Properties}}"
                    Command="{Binding Content}" 
                    ToolTip="{Binding Desc}"
                    IsHitTestVisible="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                    w:ClipDragDrop.Disable="ClipboardMenu"
                    KeyDown="wxBackNext_KeyDown" 
                    MouseEnter="Button_MouseEnter" 
                    MouseLeave="Button_MouseLeave" 
                    PreviewMouseWheel="FixScroll_PreviewMouseWheel"
                    GotFocus="Button_GotFocus" 
                    LostFocus="Button_LostFocus"/>

            <c:LimeToolBar x:Name="wxToolBar" Grid.Column="2" Grid.Row="0"
                           Style="{DynamicResource BrowserToolBarStyle}"
                           Orientation="Vertical"
                           w:ClipDragDrop.Disable="ClipboardMenu"
                           DataContext="{Binding BrowserCommands, Source={x:Static l:Global.ConfigTree}}"
                           PreviewMouseWheel="FixScroll_PreviewMouseWheel"
                           PreviewKeyDown="wxToolBar_PreviewKeyDown"/>

            <Button x:Name="wxNext" Grid.Column="2" Grid.Row="1"
                    Style="{DynamicResource NavigationNextButtonStyle}" 
                    DataContext="{Binding [Forward], Source={x:Static l:Global.Properties}}"
                    Command="{Binding Content}"
                    ToolTip="{Binding Desc}"
                    IsHitTestVisible="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                    w:ClipDragDrop.Disable="ClipboardMenu"
                    KeyDown="wxBackNext_KeyDown" 
                    MouseEnter="Button_MouseEnter" 
                    MouseLeave="Button_MouseLeave" 
                    PreviewMouseWheel="FixScroll_PreviewMouseWheel"
                    GotFocus="Button_GotFocus" 
                    LostFocus="Button_LostFocus"/>

        </Grid>
    </Border>
    
</UserControl>
